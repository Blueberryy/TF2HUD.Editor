<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="error_app_directory" xml:space="preserve">
    <value>A tf/custom directory must be set in order to use this editor.</value>
  </data>
  <data name="error_app_install" xml:space="preserve">
    <value>An error occurred while installing {0}.</value>
  </data>
  <data name="error_app_uninstall" xml:space="preserve">
    <value>An error occurred while uninstalling {0}.</value>
  </data>
  <data name="error_hud_not_found" xml:space="preserve">
    <value>Cannot find HUD {0}!</value>
  </data>
  <data name="error_transparent_vm" xml:space="preserve">
    <value>An error occurred while toggling transparent viewmodels.</value>
  </data>
  <data name="error_unknown_extension" xml:space="preserve">
    <value>Could not recognize file extension '{0}'.</value>
  </data>
  <data name="info_game_restart" xml:space="preserve">
    <value>The following changes require the game to be restarted:</value>
  </data>
  <data name="info_game_running" xml:space="preserve">
    <value>Unable to continue because Team Fortress 2 is still running. Please close the game then try again.</value>
  </data>
  <data name="info_header_no_updates" xml:space="preserve">
    <value>No Updates Found.</value>
  </data>
  <data name="info_header_restart_required" xml:space="preserve">
    <value>Restart Required.</value>
  </data>
  <data name="info_hud_backup" xml:space="preserve">
    <value>An existing {0} installation has been found. To avoid conflicts, a backup has been created.</value>
  </data>
  <data name="info_hud_install" xml:space="preserve">
    <value>{0} has been successfully installed.</value>
  </data>
  <data name="info_hud_reset" xml:space="preserve">
    <value>Are you sure you want to reset all customization options back their defaults?</value>
  </data>
  <data name="info_hud_uninstall" xml:space="preserve">
    <value>{0} has been successfully uninstalled.</value>
  </data>
  <data name="info_path_browser" xml:space="preserve">
    <value>Please select your tf/custom directory. If a valid directory is not provided, multiple editor options will be unavailable.</value>
  </data>
  <data name="info_path_invalid" xml:space="preserve">
    <value>You either selected the same directory or your selection did not end with tf/custom. Please try again.</value>
  </data>
  <data name="info_path_valid" xml:space="preserve">
    <value>A new tf/custom directory has been set. You may continue using the editor.</value>
  </data>
  <data name="info_schema_nothing" xml:space="preserve">
    <value>No new HUD schema updates. Please check back later.</value>
  </data>
  <data name="info_schema_update" xml:space="preserve">
    <value>There's a new HUD schema update available. Would you like to restart now to apply the new changes?</value>
  </data>
  <data name="status_applied" xml:space="preserve">
    <value>Settings Applied at {0}.</value>
  </data>
  <data name="status_install" xml:space="preserve">
    <value>Installation finished at {0}.</value>
  </data>
  <data name="status_isInstalled" xml:space="preserve">
    <value>{0} is installed!</value>
  </data>
  <data name="status_isNotInstalled" xml:space="preserve">
    <value>{0} is not installed!</value>
  </data>
  <data name="status_pathNotSet" xml:space="preserve">
    <value>tf/custom directory is not set!</value>
  </data>
  <data name="status_reset" xml:space="preserve">
    <value>Settings Reset at {0}.</value>
  </data>
  <data name="tooltip_docs" xml:space="preserve">
    <value>Read the Documentation</value>
  </data>
  <data name="tooltip_path" xml:space="preserve">
    <value>Change HUD Path</value>
  </data>
  <data name="tooltip_refresh" xml:space="preserve">
    <value>Refresh HUD Schemas</value>
  </data>
  <data name="tooltip_report" xml:space="preserve">
    <value>Report an Issue</value>
  </data>
  <data name="ui_apply" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="ui_directrory" xml:space="preserve">
    <value>Set Directory</value>
  </data>
  <data name="ui_install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="ui_options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="ui_path" xml:space="preserve">
    <value>Set Path</value>
  </data>
  <data name="ui_refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ui_reinstall" xml:space="preserve">
    <value>Reinstall</value>
  </data>
  <data name="ui_reset" xml:space="preserve">
    <value>Reset to Default</value>
  </data>
  <data name="ui_search" xml:space="preserve">
    <value>Search:</value>
  </data>
  <data name="ui_select_hud" xml:space="preserve">
    <value>Select a HUD</value>
  </data>
  <data name="ui_switch" xml:space="preserve">
    <value>Switch HUDs</value>
  </data>
  <data name="ui_title" xml:space="preserve">
    <value>TF2 HUD Editor</value>
  </data>
  <data name="ui_uninstall" xml:space="preserve">
    <value>Uninstall</value>
  </data>
</root>